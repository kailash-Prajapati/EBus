pipeline {
    agent {
        label 'devops'
    } 

    environment  {
        SCANNER_HOME=tool 'sonar-scanner'
    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
    
    stages{
        stage("Clone Code"){
            steps {
                echo "Cloning the code"
                git branch: 'main', url: 'https://github.com/kailash-Prajapati/EBus.git'
            }
        }

        stage('Sonarqube Analysis ') {
            steps {
                dir('src') {
                    withSonarQubeEnv('sonar-server') {
                        sh ''' $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectName=Ebus \
                        -Dsonar.projectKey=Ebus '''
                    }
                }
            }
        }
        stage('QualityGate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
                }
            }
        }
        stage('OWASP Scan') {
            steps {
                dir('src/') {
                    dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                }
            }
        }
        stage('TrivyFScan') {
            steps {
                dir('src/') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }

        stage("Build"){
            steps {
                echo "Building the image"
                sh "docker build -t phpweb ."
            }
        }

        // stage("Push to Docker Hub"){
        //     steps {
        //         echo "Pushing the image to docker hub"
        //         withCredentials([usernamePassword(credentialsId:"dockerHub",passwordVariable:"dockerHubPass",usernameVariable:"dockerHubUser")]){
        //         sh "docker tag my-note-app ${env.dockerHubUser}/my-note-app:latest"
        //         sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPass}"
        //         sh "docker push ${env.dockerHubUser}/my-note-app:latest"
        //         }
        //     }
        // }
        
        stage("Deploy"){
            steps {
                echo "Deploying the container"
                sh "docker run -dit --name webserver -p 80:80 phpweb:latest"
                
            }
        }
    }
}